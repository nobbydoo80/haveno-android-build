name: Build and Test

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]

env:
  JAVA_VERSION: '17'
  GRADLE_OPTS: -Dorg.gradle.daemon=false

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew test --stacktrace

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            **/build/reports/tests/
            **/build/test-results/

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run lint checks
        run: ./gradlew lint --stacktrace

      - name: Upload lint reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lint-reports
          path: |
            **/build/reports/lint-results-*.html
            **/build/reports/lint-results-*.xml

  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: [test, lint]
    strategy:
      matrix:
        variant: [debug, fdroid]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build ${{ matrix.variant }} APK
        run: ./gradlew assemble$(echo ${{ matrix.variant }} | sed 's/./\U&/') --stacktrace

      - name: Sign APK (Release only)
        if: matrix.variant == 'release' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: haveno-android-${{ matrix.variant }}
          path: app/build/outputs/apk/${{ matrix.variant }}/*.apk

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run security checks
        run: |
          # Install OWASP Dependency Check
          ./gradlew dependencyCheckAnalyze --info

      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            **/build/reports/dependency-check-report.html

  release:
    name: Create Release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build, security]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download APK artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/haveno-android-debug/*.apk
            artifacts/haveno-android-fdroid/*.apk
          body: |
            ## Haveno Android ${{ github.ref_name }}
            
            ### What's New
            - Please check the commit history for detailed changes
            
            ### Installation
            
            #### F-Droid (Recommended)
            Download and install the F-Droid variant APK for a Google-free experience.
            
            #### Direct Install
            Download the debug or F-Droid APK and install via ADB or directly on your device.
            
            ```bash
            adb install haveno-android-*.apk
            ```
            
            ### Verification
            
            All APKs are signed and can be verified against our public key.
            
            ### Support
            
            - [GitHub Issues](https://github.com/haveno-dex/haveno-android/issues)
            - [Haveno Matrix](https://matrix.to/#/#haveno:haveno.network)
            
            **⚠️ Warning:** This is beta software. Use at your own risk and never trade more than you can afford to lose.
          draft: false
          prerelease: contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  f-droid:
    name: F-Droid Metadata
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate F-Droid metadata
        run: |
          mkdir -p fdroid/metadata/com.haveno.android
          cat > fdroid/metadata/com.haveno.android.yml << EOF
          Categories:
            - Money
          License: AGPL-3.0-or-later
          AuthorName: Haveno DEX Team
          AuthorEmail: dev@haveno.network
          AuthorWebSite: https://haveno.exchange
          WebSite: https://haveno.exchange
          SourceCode: https://github.com/haveno-dex/haveno-android
          IssueTracker: https://github.com/haveno-dex/haveno-android/issues
          Changelog: https://github.com/haveno-dex/haveno-android/releases
          
          Name: Haveno
          Summary: Decentralized cryptocurrency exchange
          Description: |
            Haveno is a private and decentralized way to exchange Monero for national currencies or other cryptocurrencies.
            
            Features:
            * Private: No KYC, no identity verification
            * Secure: Non-custodial, peer-to-peer trading
            * Decentralized: No central authority or server
            * Open Source: Fully auditable code
            
            This Android app connects to the Haveno network to enable mobile trading with full privacy protection via Tor.
          
          RepoType: git
          Repo: https://github.com/haveno-dex/haveno-android.git
          
          Builds:
            - versionName: ${{ github.ref_name }}
              versionCode: $(date +%s)
              commit: ${{ github.sha }}
              subdir: .
              gradle:
                - fdroid
          EOF

      - name: Upload F-Droid metadata
        uses: actions/upload-artifact@v3
        with:
          name: fdroid-metadata
          path: fdroid/